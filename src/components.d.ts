/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}



import 'ionicons';

import {
  MatchResults,
} from '@stencil/router';
import {
  EventEmitter,
} from '@stencil/core';

declare global {

  namespace StencilComponents {
    interface AppClient {

    }
  }

  interface HTMLAppClientElement extends StencilComponents.AppClient, HTMLStencilElement {}

  var HTMLAppClientElement: {
    prototype: HTMLAppClientElement;
    new (): HTMLAppClientElement;
  };
  interface HTMLElementTagNameMap {
    'app-client': HTMLAppClientElement;
  }
  interface ElementTagNameMap {
    'app-client': HTMLAppClientElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-client': JSXElements.AppClientAttributes;
    }
  }
  namespace JSXElements {
    export interface AppClientAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppContact {

    }
  }

  interface HTMLAppContactElement extends StencilComponents.AppContact, HTMLStencilElement {}

  var HTMLAppContactElement: {
    prototype: HTMLAppContactElement;
    new (): HTMLAppContactElement;
  };
  interface HTMLElementTagNameMap {
    'app-contact': HTMLAppContactElement;
  }
  interface ElementTagNameMap {
    'app-contact': HTMLAppContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-contact': JSXElements.AppContactAttributes;
    }
  }
  namespace JSXElements {
    export interface AppContactAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppDocuments {

    }
  }

  interface HTMLAppDocumentsElement extends StencilComponents.AppDocuments, HTMLStencilElement {}

  var HTMLAppDocumentsElement: {
    prototype: HTMLAppDocumentsElement;
    new (): HTMLAppDocumentsElement;
  };
  interface HTMLElementTagNameMap {
    'app-documents': HTMLAppDocumentsElement;
  }
  interface ElementTagNameMap {
    'app-documents': HTMLAppDocumentsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-documents': JSXElements.AppDocumentsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppDocumentsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppFacebookvideo {

    }
  }

  interface HTMLAppFacebookvideoElement extends StencilComponents.AppFacebookvideo, HTMLStencilElement {}

  var HTMLAppFacebookvideoElement: {
    prototype: HTMLAppFacebookvideoElement;
    new (): HTMLAppFacebookvideoElement;
  };
  interface HTMLElementTagNameMap {
    'app-facebookvideo': HTMLAppFacebookvideoElement;
  }
  interface ElementTagNameMap {
    'app-facebookvideo': HTMLAppFacebookvideoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-facebookvideo': JSXElements.AppFacebookvideoAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFacebookvideoAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppFooter {

    }
  }

  interface HTMLAppFooterElement extends StencilComponents.AppFooter, HTMLStencilElement {}

  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };
  interface HTMLElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  interface ElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-footer': JSXElements.AppFooterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFooterAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppPhoto {

    }
  }

  interface HTMLAppPhotoElement extends StencilComponents.AppPhoto, HTMLStencilElement {}

  var HTMLAppPhotoElement: {
    prototype: HTMLAppPhotoElement;
    new (): HTMLAppPhotoElement;
  };
  interface HTMLElementTagNameMap {
    'app-photo': HTMLAppPhotoElement;
  }
  interface ElementTagNameMap {
    'app-photo': HTMLAppPhotoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-photo': JSXElements.AppPhotoAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPhotoAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppPresentation {

    }
  }

  interface HTMLAppPresentationElement extends StencilComponents.AppPresentation, HTMLStencilElement {}

  var HTMLAppPresentationElement: {
    prototype: HTMLAppPresentationElement;
    new (): HTMLAppPresentationElement;
  };
  interface HTMLElementTagNameMap {
    'app-presentation': HTMLAppPresentationElement;
  }
  interface ElementTagNameMap {
    'app-presentation': HTMLAppPresentationElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-presentation': JSXElements.AppPresentationAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPresentationAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppProfile {
      'match': MatchResults;
    }
  }

  interface HTMLAppProfileElement extends StencilComponents.AppProfile, HTMLStencilElement {}

  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-profile': JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppTitle {

    }
  }

  interface HTMLAppTitleElement extends StencilComponents.AppTitle, HTMLStencilElement {}

  var HTMLAppTitleElement: {
    prototype: HTMLAppTitleElement;
    new (): HTMLAppTitleElement;
  };
  interface HTMLElementTagNameMap {
    'app-title': HTMLAppTitleElement;
  }
  interface ElementTagNameMap {
    'app-title': HTMLAppTitleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-title': JSXElements.AppTitleAttributes;
    }
  }
  namespace JSXElements {
    export interface AppTitleAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface LazyImg {
      'alt': string;
      'src': string;
    }
  }

  interface HTMLLazyImgElement extends StencilComponents.LazyImg, HTMLStencilElement {}

  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lazy-img': JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
      'src'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
